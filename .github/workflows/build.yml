name: Build on macOS
on:
  push:
    branches:
      - admin/ci-cd-pipelines

jobs:
  buildForTesting:
    runs-on: macos-11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2     
      - name: Install dependencies
        run: cd src/xcode && bundle install --jobs=8
      - name: Build for testing
        run: |
          cd src/xcode && bundle exec fastlane build_for_testing
      - name: Save DerivedData folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: src/xcode/DerivedData
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Save test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: src/xcode/fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
  
  swiftLint:
    runs-on: macos-11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2       
      - name: Install dependencies
        run: cd src/xcode && bundle install --jobs=8      
      - name: swift Lint
        run: |
          cd src/xcode
          bundle exec fastlane lint
          
  communityBuild:
    runs-on: macos-11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2            
      - name: Install dependencies
        run: cd src/xcode && bundle install --jobs=8            
      - name: Community Build
        run: |
          cd src/xcode && bundle exec fastlane build_community
          
  snapshot:
    runs-on: macos-11
    needs: buildForTesting
    strategy:
      matrix:
       language: ["de-DE", "en-EN"]
       displaymode: ["dark", "light"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2            
      - name: Install dependencies
        run: cd src/xcode && bundle install --jobs=8
      - name: Restore DerivedData folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: src/xcode/DerivedData
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Restore test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: src/xcode/fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}              
      - name: Snapshot DE-light
        run: |
          cd src/xcode && bundle exec fastlane screenshot languages:${{ matrix.language }} mode:${{ matrix.displaymode }}
      - name: Remove test_output folder
      - run: |
          cd src/xcode/screenshots/screenshots-${{ matrix.language }}-${{ matrix.displaymode }}
          rm -r test_output
      - uses: actions/upload-artifact@v2
        with:
          name: screenshots-${{ github.sha }}
          path: src/xcode/screenshots/screenshots-${{ matrix.language }}-${{ matrix.displaymode }}

  collectSnapshots:
    runs-on: macos-11
    needs: snapshot
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: screenshots-${{ github.sha }}
      - name: Echo download path
        run: echo ${{steps.download.outputs.download-path}}
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{steps.download.outputs.download-path}}
    
  runAllTests:
    runs-on: macos-11
    needs: buildForTesting
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2          
      - name: Install dependencies
        run: cd src/xcode && bundle install --jobs=8      
      - name: Restore DerivedData folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: src/xcode/DerivedData
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Restore test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: src/xcode/fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}          
      - name: Run AllTests
        run: |
          cd src/xcode
          bundle exec fastlane test_without_building testplan:AllTests
